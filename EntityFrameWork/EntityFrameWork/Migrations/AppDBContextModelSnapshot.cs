// <auto-generated />
using System;
using EntityFrameWork.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameWork.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameWork.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("NumOfPage")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("EntityFrameWork.Data.BookPrice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BookID")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BookID");

                    b.HasIndex("CurrencyID");

                    b.ToTable("BookPrices");
                });

            modelBuilder.Entity("EntityFrameWork.Data.Currency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CurDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CurDescription = "Indian INR",
                            CurTitle = "INR"
                        },
                        new
                        {
                            ID = 2,
                            CurDescription = "Dollar",
                            CurTitle = "Dollar"
                        },
                        new
                        {
                            ID = 3,
                            CurDescription = "Euro",
                            CurTitle = "Euro"
                        },
                        new
                        {
                            ID = 4,
                            CurDescription = "Dinar",
                            CurTitle = "Dinar"
                        },
                        new
                        {
                            ID = 5,
                            CurDescription = "USDollar",
                            CurTitle = "Dollar"
                        });
                });

            modelBuilder.Entity("EntityFrameWork.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LanDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanDescription = "Hindi",
                            LanTitle = "Hindi"
                        },
                        new
                        {
                            Id = 2,
                            LanDescription = "Tamil",
                            LanTitle = "Tamil"
                        },
                        new
                        {
                            Id = 3,
                            LanDescription = "Urdu",
                            LanTitle = "Urdu"
                        },
                        new
                        {
                            Id = 4,
                            LanDescription = "Gujrati",
                            LanTitle = "Gujrati"
                        });
                });

            modelBuilder.Entity("EntityFrameWork.Data.Book", b =>
                {
                    b.HasOne("EntityFrameWork.Data.Language", "Language")
                        .WithMany("Book")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("EntityFrameWork.Data.BookPrice", b =>
                {
                    b.HasOne("EntityFrameWork.Data.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameWork.Data.Currency", "Currency")
                        .WithMany("BookPrice")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("EntityFrameWork.Data.Currency", b =>
                {
                    b.Navigation("BookPrice");
                });

            modelBuilder.Entity("EntityFrameWork.Data.Language", b =>
                {
                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
